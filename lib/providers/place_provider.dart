import 'package:flutter/material.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import '../models/place.dart';

class PlaceProvider with ChangeNotifier {
  final FirebaseFirestore _firestore = FirebaseFirestore.instance;
  List<Place> _places = [];

  List<Place> get places => _places;

  /// üîπ –£–¥–∞–ª—è–µ–º –º–µ—Å—Ç–æ
  Future<void> removePlace(String placeId) async {
    try {
      await _firestore.collection("places").doc(placeId).delete();
      _places.removeWhere((place) => place.id == placeId);
      notifyListeners();
    } catch (e) {
      print("üî• –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –º–µ—Å—Ç–∞: $e");
    }
  }

  /// üîπ –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –º–µ—Å—Ç –∏–∑ Firestore
  Future<void> loadPlaces() async {
    try {
      var snapshot = await _firestore.collection('places').get();
      _places = snapshot.docs
          .map((doc) => Place.fromMap(doc.data(), doc.id))
          .toList();
      notifyListeners();
    } catch (e) {
      print("üî• –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ—Å—Ç: $e");
    }
  }

  Future<void> addPlace(String name) async {
    try {
      // ‚úÖ –û—á–∏—â–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –æ—Ç –ª–∏—à–Ω–∏—Ö –ø—Ä–æ–±–µ–ª–æ–≤
      String placeId = name.trim().replaceAll(' ', '_');

      // üîπ Firestore –Ω–µ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ø—É—Å—Ç—ã–µ ID, –ø–æ–¥—Å—Ç—Ä–∞—Ö—É–µ–º—Å—è
      if (placeId.isEmpty) {
        throw Exception("–ù–∞–∑–≤–∞–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º!");
      }

      // ‚úÖ –î–æ–±–∞–≤–ª—è–µ–º –º–µ—Å—Ç–æ –≤ Firestore —Å —Ç–∞–∫–∏–º –∂–µ ID, –∫–∞–∫ –Ω–∞–∑–≤–∞–Ω–∏–µ
      await _firestore.collection("places").doc(placeId).set({"name": name});

      var newPlace = Place(id: placeId, name: name);
      _places.add(newPlace);
      notifyListeners();
    } catch (e) {
      print("üî• –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –º–µ—Å—Ç–∞: $e");
    }
  }
}
