/* import 'package:flutter/material.dart';

import '/models/wall_element.dart';

class WallElementEditor extends StatefulWidget {
  final List<WallElement> elements;
  final Function(List<WallElement>)
      onElementsUpdated; // ‚úÖ –ö–æ–ª–±—ç–∫ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è

  const WallElementEditor({
    super.key,
    required this.elements,
    required this.onElementsUpdated,
  });

  @override
  _WallElementEditorState createState() => _WallElementEditorState();
}

class _WallElementEditorState extends State<WallElementEditor> {
  final TextEditingController widthController = TextEditingController();
  final TextEditingController heightController = TextEditingController();
  final TextEditingController depthController = TextEditingController();
  final TextEditingController offsetController = TextEditingController();

  String selectedType = "window"; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
  String selectedUnit = "—à—Ç"; // ‚úÖ –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é "—à—Ç"
  void _saveElement() {
    double width = double.tryParse(widthController.text) ?? 0.0;
    double height = double.tryParse(heightController.text) ?? 0.0;
    double x = double.tryParse(depthController.text) ?? 0.0;
    double y = double.tryParse(offsetController.text) ?? 0.0;

    if (width <= 0 || height <= 0) return;

    setState(() {
      widget.elements.add(WallElement(
        id: "we_${DateTime.now().millisecondsSinceEpoch}", // ‚úÖ –¢–µ–ø–µ—Ä—å —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç

        type: selectedType,
        width: width,
        height: height,
        depth: 0.0, // ‚úÖ –ì–ª—É–±–∏–Ω–∞
        offset: 0.0, // ‚úÖ –û—Ç —Å—Ç–µ–Ω—ã
        unit: selectedUnit, // ‚úÖ –°–æ—Ö—Ä–∞–Ω—è–µ–º "—à—Ç" –∏–ª–∏ "–º/–ø"
      ));
    });

    widget.onElementsUpdated(widget.elements); // ‚úÖ –°–æ–æ–±—â–∞–µ–º –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏
    Navigator.pop(context); // –ó–∞–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ
  }

  @override
  Widget build(BuildContext context) {
    return Padding(
      padding: const EdgeInsets.all(16),
      child: Column(
        mainAxisSize: MainAxisSize.min,
        children: [
          const Text("–î–æ–±–∞–≤–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç",
              style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold)),
          DropdownButton<String>(
            value: selectedType,
            onChanged: (String? newValue) {
              setState(() {
                selectedType = newValue!;
              });
            },
            items: const [
              DropdownMenuItem(value: "window", child: Text("üè† –û–∫–Ω–æ")),
              DropdownMenuItem(value: "door", child: Text("üö™ –î–≤–µ—Ä—å")),
              DropdownMenuItem(value: "other", child: Text("üé® –î—Ä—É–≥–æ–µ")),
            ],
          ),
          TextField(
              controller: widthController,
              decoration: const InputDecoration(labelText: "–®–∏—Ä–∏–Ω–∞ (–º)")),
          TextField(
              controller: heightController,
              decoration: const InputDecoration(labelText: "–í—ã—Å–æ—Ç–∞ (–º)")),
          TextField(
            controller: depthController,
            decoration: InputDecoration(labelText: "–ü–æ–∑–∏—Ü–∏—è –≥–ª—É–±–∏–Ω–∞ (–º)"),
            keyboardType: TextInputType.number,
          ),
          TextField(
            controller: offsetController,
            decoration: InputDecoration(labelText: "–ü–æ–∑–∏—Ü–∏—è –æ—Ç —É–≥–ª–∞ (–º)"),
            keyboardType: TextInputType.number,
          ),
          const SizedBox(height: 20),
          Row(
            mainAxisAlignment: MainAxisAlignment.spaceEvenly,
            children: [
              ElevatedButton.icon(
                onPressed: _saveElement,
                icon: const Icon(Icons.check),
                label: const Text("–î–æ–±–∞–≤–∏—Ç—å"),
              ),
              ElevatedButton.icon(
                onPressed: () => Navigator.pop(context),
                icon: const Icon(Icons.close),
                label: const Text("–û—Ç–º–µ–Ω–∞"),
              ),
            ],
          ),
        ],
      ),
    );
  }
} */
