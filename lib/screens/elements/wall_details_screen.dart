import 'package:flutter/material.dart';
import '/models/wall_element.dart';
import '/models/wall.dart';

class WallDetailsScreen extends StatelessWidget {
  final Wall wall;

  const WallDetailsScreen({super.key, required this.wall});
  String _formatElement(WallElement e) {
    final p = e.params;

    if (e.category == "—Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–π") {
      final width = p["—à–∏—Ä–∏–Ω–∞"] ?? "?";
      final height = p["–≤—ã—Å–æ—Ç–∞"] ?? "?";
      final depth = p.containsKey("–≥–ª—É–±–∏–Ω–∞") ? " x ${p["–≥–ª—É–±–∏–Ω–∞"]} –º" : "";
      final offset = p["–æ—Ç—Å—Ç—É–ø"] ?? "?";

      return "${e.type}: $width x $height$depth –º, –æ—Ç—Å—Ç—É–ø: $offset –º";
    }

    if (e.category == "—É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π") {
      final value = p["value"] ?? "?";
      final unit = p["unit"] ?? "";
      final offset = p["–æ—Ç—Å—Ç—É–ø"] ?? "?";

      return "${e.type}: $value $unit, –æ—Ç—Å—Ç—É–ø: $offset –º";
    }

    // fallback
    return "${e.type}: –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω—ã (${p.toString()})";
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text("–î–µ—Ç–∞–ª–∏ —Å—Ç–µ–Ω—ã")),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Text("üìè –î–ª–∏–Ω–∞: ${wall.length} –º", style: TextStyle(fontSize: 18)),
            Text("üìê –í—ã—Å–æ—Ç–∞: ${wall.height} –º", style: TextStyle(fontSize: 18)),
            Text("üîÑ –£–≥–æ–ª: ${wall.angle}¬∞", style: TextStyle(fontSize: 18)),
            Text("üß± –¢–æ–ª—â–∏–Ω–∞: ${wall.thickness} –º",
                style: TextStyle(fontSize: 18)),
            const SizedBox(height: 16),
            Text("–≠–ª–µ–º–µ–Ω—Ç—ã —Å—Ç–µ–Ω—ã:",
                style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold)),
            Expanded(
              child: wall.elements.isEmpty
                  ? Center(child: Text("–ù–µ—Ç —ç–ª–µ–º–µ–Ω—Ç–æ–≤"))
                  : ListView.builder(
                      itemCount: wall.elements.length,
                      itemBuilder: (context, index) {
                        final element = wall.elements[index];
                        return ListTile(
                          title: Text("üîπ ${element.type}"),
                          subtitle: Text(
                            _formatElement(element),
                          ),
                        );
                      },
                    ),
            ),
          ],
        ),
      ),
    );
  }
}
